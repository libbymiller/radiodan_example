#!/usr/bin/env ruby
require 'rubygems'
require 'bundler/setup'
require 'radiodan'
require 'sinatra/async'
require 'thin'
require 'faye'
require 'json'

$:<< './lib'
require 'download_bbc_radio'
require 'download_top_radio'
require 'change_channel'
require 'web_server'
require 'local_config'

config = LocalConfig.new


root = File.join(File.dirname(__FILE__), '..')

@bbc_stations = DownloadTopRadio.new(config.top_channels.url)
stations_list = @bbc_stations.run

downloaded = DownloadBBCRadio.new
stations_hash = downloaded.run

url = stations_hash[stations_list[0]]
radio = Radiodan::Playlist.new tracks: url

url1 = stations_hash[stations_list[1]]
radio1 = Radiodan::Playlist.new tracks: url1

str = ""
stations_list.each do |station|
  puts station
  str << station
  str << "\t"
  str << stations_hash[station]
  str << "\n"
end

File.open("#{root}/stations.txt", 'w') {|f| f.write(str) }

to_play = "#{stations_list[1]}\t#{stations_hash[stations_list[1]]}"
File.open("#{root}/to_play.txt", 'w') {|f| f.write(to_play) }


#bayeux = Faye::RackAdapter.new(:mount => '/faye', :timeout => 25)
#bayeux.listen(8000)


EM.synchrony do
  radios = Radiodan::Playlist.new(tracks: (radio.tracks))

  radio = Radiodan.new do |builder|
    builder.log      STDOUT
    builder.adapter  :MPD, :host => 'localhost', :port => 6600
    builder.playlist radio
    builder.use      :touch_file, :dir => File.join(root, 'tmp')
    builder.use      :change_channel, :filename => "#{root}/to_play.txt"
  end

  Faye::WebSocket.load_adapter('thin')
  client = Faye::Client.new("http://localhost:3000/faye")
  radio.start
=begin
  radio.player.register_event :channel_changed do 
    puts "channel changed!!!!!!"
    state = radio.player.state
    volume = radio.player.playlist.volume
    name = radio.player.playlist.tracks[0]["Name"]
    client.publish("/foo", "Channel Changed to #{state}, #{volume}, #{name}")
  end
  
=end
  Thin::Server.start WebServer.new(radio.player), '0.0.0.0', 3000, :signals => false
end

